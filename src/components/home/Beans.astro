---
import { languages } from "@/i18n/ui";
import { useTranslations } from "@/i18n/utils";

interface Props {
  lang: keyof typeof languages;
}

const { lang } = Astro.props;
const t = useTranslations(lang);
---

<section class="beans-section w-fit">
  <div class="flex w-full items-center justify-between gap-10 md:gap-32">
    <div class="order-2 max-w-70 text-center md:order-1 md:text-left">
      <img src="/fire.webp" class="beans-icon mb-8 size-[76px] rounded-full" />
      <h3 class="beans-title text-secondary mb-4 text-2xl font-bold">
        {t("home.beans.title")}
      </h3>
      <p class="beans-description text-gray1 leading-relaxed">
        {t("home.beans.desc")}
      </p>
    </div>
    <div class="order-1 md:order-2">
      <img
        src="/images/where-the-aroma-begins.webp"
        class="aspect-[5/3] h-[330px]"
      />
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";
  import {
    durations,
    staggerDelays,
    prefersReducedMotion,
  } from "@/lib/animations";

  function initBeansAnimation() {
    const shouldAnimate = !prefersReducedMotion();

    if (!shouldAnimate) return;

    const elements = [
      ".beans-icon",
      ".beans-title",
      ".beans-description",
      ".beans-image",
    ];

    gsap.set(elements, {
      opacity: 0,
      y: 20,
      scale: 0.95,
    });

    // Create staggered animation timeline
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: ".beans-section",
        start: "top 80%",
        once: true,
      },
    });

    // Animate each element with stagger
    elements.forEach((selector, index) => {
      tl.to(
        selector,
        {
          opacity: 1,
          y: 0,
          scale: 1,
          duration: durations.normal,
          ease: "cubic-bezier(.215, .61, .355, 1)", // ease-out-cubic
        },
        index * staggerDelays.normal,
      ); // Stagger by 0.1s
    });
  }

  // Initialize when DOM is ready
  document.addEventListener("DOMContentLoaded", initBeansAnimation);
</script>
